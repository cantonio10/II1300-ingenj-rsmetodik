#include "FindWall.nxc"
#include "FollowWall.nxc"
#include "Constants.nxc"
#include "ThirdMotor.nxc"
#include "MoveToWall.nxc"
//#include "DriveForward.nxc"

int reverse = 1;
/*
mutex moveMutex;

task sensorScan(){
  while(true){
    if (SensorUS(IN_2) < 30) {
      Acquire(moveMutex);
      Off(OUT_BC);
      }

    SetSensorUltrasonic(IN_2);
    SensorUS(IN_2);
    Release(moveMutex);

    if (SensorUS(IN_2) < 30) {
      Off(OUT_BC);
      break;
      }
    }
}

task movetoWall(){
  Acquire(moveMutex);

  while(SensorUS(IN_2) > 40){
    RotateMotorEx(OUT_BC, 30, 700 * reverse, 0, true, true);
    Release(moveMutex);
  }
}
*/

sub DeliverCloseLeft(){
  //Finds and goes to wall
  FindWall(1, reverse);
  MoveToWall(reverse);

  //Rotates head and findswall again
  RotateUS(90);
  Wait(500);
  RotateMotorEx(OUT_BC, 50, 400.0 * reverse, 100, true, true);
  Wait(500);
  FindWall(0, reverse);

  //Precedes(movetoWall, sensorScan);

  FollowWall(RIGHT, 250);
  RotateUS(-90 * reverse);
  DropBook();
  FollowWall(RIGHT, -250);
}
sub DeliverCloseRight(){
  reverse = -1;
  //Finds and goes to wall
  FindWall(1, reverse);
  MoveToWall(reverse);

  //Rotates head and findswall again
  RotateUS(90);
  Wait(500);
  RotateMotorEx(OUT_BC, 50, 400.0 * reverse, 100, true, true);
  Wait(500);
  FindWall(0, reverse);

  //Precedes(movetoWall, sensorScan);

  FollowWall(RIGHT, 250);
  RotateUS(-90 * reverse);
  DropBook();
  FollowWall(RIGHT, -250);
}
sub DeliverFarLeft(){

}
sub DeliverFarRight(){

}



task main() {
  DeliverCloseLeft();
  //DeliverCloseRight();

}
