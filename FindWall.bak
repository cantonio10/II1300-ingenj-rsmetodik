#include "RotateRobot.nxc"


task main(){
  float points[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
  int pointAmount = 10;
  float closestPointDistance = 9999;
  float closestPointDegrees = 0;

  //RotateMotorEx(OUT_AB, 50, 720, 100, true, true);
<<<<<<< HEAD
  
  /*
  RotateRobot(360);
  Wait(1000);
  RotateRobot(-360);
  */
  
  /*
  for(int i = 0; i < pointAmount; i++){
    RotateRobot(1280 / pointAmount);
    Wait(1000);
  }
  
=======
                           /*
  for(int i = 0; i < 10; i++){
    RotateRobot(1280 / 10);
  }
     */
>>>>>>> 67bb8e39f5d50ccddad6a32ca3ab09e66394a43d
  //RotateRobot(360);
  //Wait(1000);

  SetSensorLowspeed(IN_2);

                             //SensorUS(IN_2)
  //Gets and saves all the points
<<<<<<< HEAD
  for(int i = 0; i < 10; i++){
=======
  for(int i = 0; i < pointAmount; i++){
>>>>>>> 67bb8e39f5d50ccddad6a32ca3ab09e66394a43d
    RotateRobot(360 / pointAmount);
    points[i] = SensorUS(IN_2);

    if(points[i] < closestPointDistance){
      closestPointDistance = points[i];
      closestPointDegrees = (360 / pointAmount) * i;
    }

    Wait(500);
  }
  //Rotate to the correct point
  /*
  if(closestPointDegrees > 180)
    RotateRobot((closestPointDegrees - 180) * -1);
  else
    RotateRobot(closestPointDegrees);
<<<<<<< HEAD
    
    */
=======
  */
  
    RotateRobot(closestPointDegrees + 60);
>>>>>>> 67bb8e39f5d50ccddad6a32ca3ab09e66394a43d
}
